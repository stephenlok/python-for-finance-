# -*- coding: utf-8 -*-
"""bsm_mcs_euro.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bcv1CqdPczlOHyv9BWBN2J-3-A124TPk
"""

#P16
#Monte Carlo valuation of European call option
#in Black-Scholes_merton model
#bsm_mcs_euro.py

import numpy as np

# Parameter Values
S0 = 100 # intial index level
K = 105 # strike price
T = 1.0 # time-to-maturity
r = 0.05 # riskless short rate
sigma = 0.2 # volatility

I = 100000 # number of simulations

# Valuation Algorithm
z = np.random.standard_normal(I) # pseudorandom numbers
ST = S0 * np.exp((r - 0.5 * sigma ** 2) * T + sigma * np.sqrt(T) * z)
     # index values at maturity, Black-Scholes-Merton model at p14
hT = np.maximum(ST - K, 0) # inner values at maturity 
C0 = np.exp(-r * T) * np.sum(hT) / I # Monte Carlo estimator euation 1-2 at p15

print ("Value of the European Call Option %5.3f" % C0)

